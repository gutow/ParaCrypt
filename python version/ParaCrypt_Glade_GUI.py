#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0b1 on Sat Dec 30 14:02:57 2017
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class ParaCryptFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ParaCryptFrame.__init__
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, _("Quit"), "")
        self.Bind(wx.EVT_MENU, self.onQuit, id=item.GetId())
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, _("About"), "")
        self.Bind(wx.EVT_MENU, self.onAbout, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, _("Help"), "")
        self.Bind(wx.EVT_MENU, self.onHelp, id=item.GetId())
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("Help"))
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.ChooseKeyButton = wx.Button(self, wx.ID_ANY, _("Choose Key File"))
        self.KeyFilePath = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.HSCROLL)
        self.chooseToEncryptButton = wx.Button(self, wx.ID_ANY, _("Choose File to Encrypt or Decrypt"))
        self.toEncryptPath = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.HSCROLL)
        self.passwordLabel = wx.StaticText(self, wx.ID_ANY, _("Encryption Password"))
        self.encryptPassword = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.HSCROLL)
        self.DecryptButton = wx.Button(self, wx.ID_ANY, _("Decrypt"))
        self.encryptButton = wx.Button(self, wx.ID_ANY, _("Encrypt"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onChooseKey, self.ChooseKeyButton)
        self.Bind(wx.EVT_BUTTON, self.onChooseToEncrypt, self.chooseToEncryptButton)
        self.Bind(wx.EVT_BUTTON, self.onDecrypt, self.DecryptButton)
        self.Bind(wx.EVT_BUTTON, self.onEncrypt, self.encryptButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ParaCryptFrame.__set_properties
        self.SetTitle(_("Paranoid Encrypt"))
        self.KeyFilePath.SetMinSize((240, 27))
        self.toEncryptPath.SetMinSize((240, 27))
        self.encryptPassword.SetMinSize((240, 27))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ParaCryptFrame.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(4, 2, 0, 0)
        grid_sizer_1.Add(self.ChooseKeyButton, 0, wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.KeyFilePath, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.chooseToEncryptButton, 0, wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.toEncryptPath, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.passwordLabel, 0, wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.encryptPassword, 0, 0, 0)
        grid_sizer_1.Add(self.DecryptButton, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add(self.encryptButton, 0, wx.ALIGN_CENTER, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def onQuit(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onQuit' not implemented!")
        event.Skip()

    def onAbout(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onAbout' not implemented!")
        event.Skip()

    def onHelp(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onHelp' not implemented!")
        event.Skip()

    def onChooseKey(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onChooseKey' not implemented!")
        event.Skip()

    def onChooseToEncrypt(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onChooseToEncrypt' not implemented!")
        event.Skip()

    def onDecrypt(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onDecrypt' not implemented!")
        event.Skip()

    def onEncrypt(self, event):  # wxGlade: ParaCryptFrame.<event_handler>
        print("Event handler 'onEncrypt' not implemented!")
        event.Skip()

# end of class ParaCryptFrame
'''
class ParaCrypt(wx.App):
    def OnInit(self):
        self.frame_1 = ParaCryptFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame_1)
        self.frame_1.Show()
        return True

# end of class ParaCrypt

if __name__ == "__main__":
    gettext.install("ParaCrypt") # replace with the appropriate catalog name

    ParaCrypt = ParaCrypt(0)
    ParaCrypt.MainLoop()
'''